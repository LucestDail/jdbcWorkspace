/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.39
 * Generated at: 2020-11-20 02:24:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.model1.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.MemberDao;
import model.Member;

public final class updateForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.MemberDao");
    _jspx_imports_classes.add("model.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel = \"stylesheet\" href=\"../../css/main.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<script>\r\n");

request.setCharacterEncoding("euc-kr");
String parameterId = request.getParameter("id");
String sessionId = (String)session.getAttribute("login");
if(sessionId == null){
      out.write("\r\n");
      out.write("\talert(\"로그인 하세용...\");\r\n");
      out.write("\tlocation.href('loginForm.jsp');\r\n");

}
Member mem = new MemberDao().selectOne(parameterId);
String id = null;
String name = null;
String gender = null;
String tel = null;
String email = null;
String picture = null;
String pass = null;
Member sMem = new MemberDao().selectOne(sessionId);
String sPass = sMem.getPass();
if(mem != null){
	id = mem.getId();
	name = mem.getName();
	gender = (mem.getGender() == 1) ? "남" : "여";
	tel = mem.getTel();
	email = mem.getEmail();
	picture = mem.getPicture();
	pass = mem.getPass();
}
boolean owner = false;
if(!sessionId.equals(parameterId) && !sessionId.equals("admin")){
	
      out.write("\r\n");
      out.write("\talert(\"내 정보만 조회 가능합니다......\")\r\n");
      out.write("\tlocation.href = \"main.jsp\";\r\n");
      out.write("\t");

}


      out.write("\r\n");
      out.write("function back(){\r\n");
      out.write("\thistory.go(-1);\r\n");
      out.write("}\r\n");
      out.write("function inputcheck(f){\r\n");
      out.write("\tif(f.pass.value == ''){\r\n");
      out.write("\t\talert(\"비밀번호를 입력하세요\");\r\n");
      out.write("\t\tf.pass.focus();\r\n");
      out.write("\t\treturn false;\t\r\n");
      out.write("\t}\r\n");
      out.write("\treturn true;\r\n");
      out.write("}\r\n");
      out.write("function win_upload(){\r\n");
      out.write("\tvar op = \"width = 500, height = 150, left = 50, top = 150\";\r\n");
      out.write("\topen(\"pictureForm.jsp\",\"\",op);\r\n");
      out.write("}\r\n");
      out.write("function win_passchg(){\r\n");
      out.write("\tvar op = \"width = 500, height=250, left=50, top=150\";\r\n");
      out.write("\topen(\"passwordForm.jsp\",\"\",op);\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<form action=\"update.jsp\" name = \"f\" method=\"post\" onsubmit=\"return inputcheck(this)\">\r\n");
      out.write("\t<input type = \"hidden\" name=\"picture\" value =\"");
      out.print(mem.getPicture());
      out.write("\">\r\n");
      out.write("\t<input type = \"hidden\" name=\"kbn\">\r\n");
      out.write("\t<input type = \"hidden\" name = \"id\" value = ");
      out.print(parameterId);
      out.write(">\r\n");
      out.write("\t<table><caption>회원정보 수정</caption>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td rowspan = \"4\" valign = \"bottom\">\r\n");
      out.write("\t\t\t\t<img src = \"picture/");
      out.print( mem.getPicture());
      out.write("\" width=\"100\" height=\"120\" id=\"picture\"><br>\r\n");
      out.write("\t\t\t\t<font size=\"1\"><a href = \"javascript:win_upload()\">사진등록</a></font>\r\n");
      out.write("\t\t\t</td><th>아이디</th><td><input type = \"text\" name = \"id\" readonly value = \"");
      out.print(id );
      out.write("\"></td></tr>\r\n");
      out.write("\t\t\t<tr><th>비밀번호</th><td><input type = \"password\" name = \"pass\"></td></tr>\r\n");
      out.write("\t\t\t<tr><th>이름</th><td><input type = \"text\" name = \"name\" value = \"");
      out.print(name );
      out.write("\"></td></tr>\r\n");
      out.write("\t\t\t<tr><th>성별</th>\r\n");
      out.write("\t\t\t");

			if(gender.equals("남")){
				
      out.write("\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<input type = \"radio\" name = \"gender\" value = \"1\">남\r\n");
      out.write("\t\t\t\t\t<input type = \"radio\" name = \"gender\" value = \"2\" checked>여\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t");

			}else{
				
      out.write("\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<input type = \"radio\" name = \"gender\" value = \"1\" checked>남\r\n");
      out.write("\t\t\t\t\t<input type = \"radio\" name = \"gender\" value = \"2\">여\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t");

			}
			
      out.write("\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>전화번호</th>\r\n");
      out.write("\t\t\t\t<td colspan=\"2\"><input type = \"text\" name = \"tel\" value = \"");
      out.print(tel );
      out.write("\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>이메일</th>\r\n");
      out.write("\t\t\t\t<td colspan=\"2\"><input type = \"text\" name = \"email\" value = \"");
      out.print(email );
      out.write("\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan = \"3\">\r\n");
      out.write("\t\t\t\t\t\t<input type = \"submit\" value = \"회원수정\">\r\n");
      out.write("\t\t\t\t\t");
 if(sessionId.equals("admin") || !parameterId.equals("admin")){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<input type = \"submit\" value = \"비밀번호수정\" onclick=\"win_passchg()\">\r\n");
      out.write("\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<input type = \"button\" value = \"돌아가기\" onclick=\"back()\">\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
