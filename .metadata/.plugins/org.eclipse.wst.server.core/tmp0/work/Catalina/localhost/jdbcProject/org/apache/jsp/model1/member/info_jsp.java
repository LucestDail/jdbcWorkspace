/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.39
 * Generated at: 2020-11-20 02:14:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.model1.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.Member;
import model.MemberDao;

public final class info_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.MemberDao");
    _jspx_imports_classes.add("model.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>회원정보 보기</title>\r\n");
      out.write("<link rel = \"stylesheet\" href = \"../../css/main.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<script>\r\n");

	request.setCharacterEncoding("euc-kr");
	String parameterId = request.getParameter("id");
	String sessionId = (String)session.getAttribute("login");
	if(sessionId == null){
      out.write("\r\n");
      out.write("\t\talert(\"로그인 하세용...\");\r\n");
      out.write("\t\tlocation.href('loginForm.jsp');\r\n");
      out.write("\t");

	}
	Member mem = new MemberDao().selectOne(parameterId);
	String id = null;
	String name = null;
	String gender = null;
	String tel = null;
	String email = null;
	String picture = null;
	if(mem != null){
		id = mem.getId();
		name = mem.getName();
		gender = (mem.getGender() == 1) ? "남" : "여";
		tel = mem.getTel();
		email = mem.getEmail();
		picture = mem.getPicture();
	}
	boolean owner = false;
	if(!sessionId.equals(parameterId) && !sessionId.equals("admin")){
		
      out.write("\r\n");
      out.write("\t\talert(\"내 정보만 조회 가능합니다......\")\r\n");
      out.write("\t\tlocation.href = \"main.jsp\";\r\n");
      out.write("\t\t");

	}

      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<form name = \"f\" method=\"post\">\r\n");
      out.write("<input type = \"hidden\" name =\"picture\" value = \"\">\r\n");
      out.write("<table><caption>회원 정보 보기</caption>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td rowspan = \"6\">\r\n");
      out.write("\t\t\t\t<img src = \"picture/");
      out.print(mem.getPicture() );
      out.write("\" width=\"200\" height=\"300\" id=\"picture\">\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t\t<th> 아이디</th>\r\n");
      out.write("\t\t<td>");
      out.print(id );
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th> 이름</th>\r\n");
      out.write("\t\t<td>");
      out.print(name );
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th> 성별</th>\r\n");
      out.write("\t\t<td>");
      out.print(gender );
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th> 전화</th>\r\n");
      out.write("\t\t<td>");
      out.print(tel );
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th> 이메일</th>\r\n");
      out.write("\t\t<td>");
      out.print(email );
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td colspan=\"2\">\r\n");
      out.write("\t\t\t<a href = \"updateForm.jsp?id=");
      out.print(parameterId);
      out.write("\">[수정]</a>\r\n");
      out.write("\t\t\t");
 if(!parameterId.equals("admin") && !sessionId.equals("admin")){
      out.write("\r\n");
      out.write("\t\t\t<a href = \"deleteForm.jsp?id=");
      out.print(parameterId);
      out.write("\">[탈퇴]</a>\r\n");
      out.write("\t\t\t");
 }
      out.write("\r\n");
      out.write("\t\t\t<a href = \"main.jsp\">[돌아가기]</a>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
