/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.39
 * Generated at: 2020-11-26 00:49:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.model1.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;
import java.text.SimpleDateFormat;
import model.Board;
import java.util.List;
import model.BoardDao;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.BoardDao");
    _jspx_imports_classes.add("model.Board");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("     ");

     	int pageNum = 1;
     	try{
     		pageNum = Integer.parseInt(request.getParameter("pageNum"));
     	}catch(NumberFormatException e){
     		//없엉...
     	}
     	int limit = 10;
     	BoardDao dao = new BoardDao();
     	int boardcount = dao.boardCount(); // 전체 게시물 등록 건수를 리턴
     	//pageNum에 출력될 게시물 10개를 List 객체로 리턴
     	/*
     	startpage : 화면에 출력될 시작 페이지 번호
     	현재 페이지 시작페이지
     		2	:	1
     	2/10.0 => 0.2 + 0.9 => (int)(1.1) - 1 => 0 * 10 => 0+1 => 1
     		505	:	501
     	505/10.0 => 50.5 + 0.9 => (int)(51.4) - 1 => 50*10 => 500 + 1
     	
     	
     	첨부파일이 있는 경우 @ 표시하기 -> @ 누르면 사진 표시
     	오늘 등록된 게시물은 시:분:초로 출력하기
     	오늘 등록이 아닌 경우는 년-월-일 시:분으로 출력하기
     	
     	답글인 경우 들여쓰기 ㅂ 한자 6번 └
     	
     	*/
     	List<Board> list = dao.list(pageNum,limit);
     	int maxpage = (int)((double)boardcount/limit + 0.95);
     	int startpage = ((int)(pageNum/10.0 + 0.9) - 1) * 10 + 1;
     	int endpage = startpage + 9;
     	if(endpage > maxpage){
     		endpage = maxpage;
     	}
     	int count = 0;
     
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>게시물 목록 출력</title>\r\n");
      out.write("<link rel = \"stylesheet\" href = \"../../css/main.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<table>\r\n");
      out.write("\t<caption>게시글 목록</caption>\r\n");
      out.write("\t");
if(boardcount == 0){ 
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan = \"5\"> 등록된 게시글이 없습니다...\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t");
}else{ 
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan = \"5\" style = \"text-align:right\"> 글개수:");
      out.print(boardcount);
      out.write("\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th width = \"5%\"> 번호</th>\r\n");
      out.write("\t\t\t<th width = \"55%\"> 제목</th>\r\n");
      out.write("\t\t\t<th width = \"10%\"> 작성자</th>\r\n");
      out.write("\t\t\t<th width = \"20%\"> 작성일자</th>\r\n");
      out.write("\t\t\t<th width = \"10%\"> 조회수</th>\t\t\t\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");
 for(Board b : list){
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>");
      out.print(dao.maxnum() - ((pageNum-1)*limit) - count++);
      out.write("</td>\r\n");
      out.write("\t\t\t<td style = \"text-align : left\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!-- 답글이므로 여백이랑 └ 을 줘서 답글처럼 보이게... 이때 grplevel 사용! -->\r\n");
      out.write("\t\t\t");
for(int i = 0; i < b.getGrplevel(); i ++){
      out.write("\r\n");
      out.write("\t\t\t&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t");
if(b.getGrplevel() > 0){ 
      out.write("\r\n");
      out.write("\t\t\t└\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!--  첨부파일이 있으면 표시하겠습니당... -->\r\n");
      out.write("\t\t\t");
 if(b.getFile1() != null && !b.getFile1().trim().equals("")){
      out.write("\r\n");
      out.write("\t\t\t\t<a href = \"file/");
      out.print(b.getFile1() );
      out.write("\" style=\"text-decoration: none;\">@</a>\r\n");
      out.write("\t\t\t");
}else {
      out.write("\r\n");
      out.write("\t\t\t&nbsp;\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t<a href = \"info.jsp?num=");
      out.print(b.getNum() );
      out.write('"');
      out.write('>');
      out.print(b.getSubject() );
      out.write("</a>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(b.getName() );
      out.write("</td>\r\n");
      out.write("\t\t\t");
 // 날짜를 좀만 가공하겠습니다잉
				SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
				String todayDefault = sf.format(new Date());
				SimpleDateFormat todayFormat = new SimpleDateFormat("HH:mm:ss");
				SimpleDateFormat notTodayFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm");
			
      out.write("\r\n");
      out.write("\t\t\t\t");
if(sf.format(b.getRegdate()).equals(todayDefault)){ 
      out.write("\r\n");
      out.write("\t\t\t\t<!-- 오늘일 경우 -->\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t");
      out.print(todayFormat.format(b.getRegdate()));
      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t");
}else{ 
      out.write("\r\n");
      out.write("\t\t\t\t<!--  오늘이 아닌 경우 -->\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t");
      out.print(notTodayFormat.format(b.getRegdate()));
      out.write("\r\n");
      out.write("\t\t\t\t</td>\t\r\n");
      out.write("\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t<td>");
      out.print(b.getReadcnt() );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");
} 
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan = \"5\">\r\n");
      out.write("\t\t\t\t");

				if(pageNum <= 1){
				
      out.write("\r\n");
      out.write("\t\t\t\t\t[이전]\r\n");
      out.write("\t\t\t\t");

				} else {
				
      out.write("\r\n");
      out.write("\t\t\t\t\t<a href = \"list.jsp?pageNum=");
      out.print(pageNum - 1 );
      out.write("\">[이전]</a>\r\n");
      out.write("\t\t\t\t");

				} 
				for(int a = startpage; a<=endpage; a++){
					if(a == pageNum){
					
      out.write("\r\n");
      out.write("\t\t\t\t\t\t[");
      out.print(a );
      out.write("]\r\n");
      out.write("\t\t\t\t\t");

					} else{
					
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<a href = \"list.jsp?pageNum=");
      out.print(a );
      out.write('"');
      out.write('>');
      out.write('[');
      out.print(a );
      out.write("]</a>\r\n");
      out.write("\t\t\t\t\t");

					}
				}
				
      out.write("\r\n");
      out.write("\t\t\t\t");

				if(pageNum >= maxpage){ 
				
      out.write("\r\n");
      out.write("\t\t\t\t\t[다음]\r\n");
      out.write("\t\t\t\t");

				} else{ 
				
      out.write("\r\n");
      out.write("\t\t\t\t\t<a href = \"list.jsp?pageNum=");
      out.print(pageNum + 1 );
      out.write("\">[다음]</a>\r\n");
      out.write("\t\t\t\t");

				}
				
      out.write("\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

		}
		
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan = \"5\" style = \"text-align:right\">\r\n");
      out.write("\t\t\t\t<a href = \"writeForm.jsp\">[글쓰기]</a>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
